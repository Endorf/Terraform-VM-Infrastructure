name: Terraform CI workflow

on:
  push:
    branches:
      - main
  pull_request:
    paths-ignore:
      - '**.md'
  release:
    types: [published]

env:
  TERRAFORM_VERSION: 1.5.2


jobs:
  ci:
    name: "ci"
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: tfsec
        uses: aquasecurity/tfsec-action@v1.0.0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Terraform init
        id: init
        run: terraform init
        
      - name: Terraform validation
        id: validate
        run: terraform validate -no-color


  cd:
    name: "cd"
    runs-on: ubuntu-latest
    needs: [ci]

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false
        
      - name: Terraform init
        id: init
        run: terraform init
        
      - name: Terraform plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -var db_pass=${{ secrets.DB_PASS }} -no-color

      - name: Check tag
        id: check-tag
        run: |
          if [[ ${{ github.ref }} =~ ^refs\/tags\/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then echo "environment=live" >> $GITHUB_OUTPUT          
          elif [[ ${{ github.ref }} == 'refs/heads/main' ]]; then echo "environment=stage" >> $GITHUB_OUTPUT
          else echo "environment=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Terraform Apply Dev
        if: github.event_name == 'push' || github.event_name == 'release'
        run: |
          terraform init
          # terraform apply -auto-approve

      - name: Terraform Apply Stage
        if: steps.check-tag.outputs.environment == 'stage' && github.event_name == 'push'
        run: |
          terraform init
          # terraform apply -var="environment=${{steps.check-tag.outputs.environment}}" -auto-approve

      - name: Terraform Apply Production
        if: steps.check-tag.outputs.environment == 'live' && github.event_name == 'release'
        run: |
          terraform init
          # terraform apply -var="environment=${{steps.check-tag.outputs.environment}}" -auto-approve
