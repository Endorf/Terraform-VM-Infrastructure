name: Terraform CI workflow

on:
  push:
  pull_request:
    paths-ignore:
      - '**.md'
  release:
    types: [published]


jobs:
  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
          terraform_wrapper: false
          
      - name: Terraform format check
        id: fmt
        run: terraform fmt -check
        
      - name: Terraform init
        id: init
        run: terraform init
        
      - name: Terraform validation
        id: validate
        run: terraform validate -no-color
        
      - name: Terraform plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -var db_pass=${{ secrets.DB_PASS }} -no-color
        continue-on-error: true

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
        
      - name: Check tag
        id: check-tag
        run: |
          if [[ ${{ github.ref }} =~ ^refs\/tags\/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then echo ::set-output name=environment::live
          elif [[ ${{ github.ref }} == 'refs/heads/main' ]]; then echo ::set-output name=environment::stage
          else echo ::set-output name=environment::unknown
          fi
          
      - name: Terraform Apply 1
        if: github.event_name == 'push' || github.event_name == 'release'
        run: |
          terraform init
          terraform apply -auto-approve

      - name: Terraform Apply 2
        if: steps.check-tag.outputs.environment == 'stage' && github.event_name == 'push'
        run: terraform apply -var db_pass=${{ secrets.DB_PASS }} -auto-approve

      - name: Terraform Apply 3
        if: steps.check-tag.outputs.environment == 'live' && github.event_name == 'release'
        run: |
          terraform init
          terraform apply -var db_pass=${{ secrets.DB_PASS }} -auto-approve
        
      
    
